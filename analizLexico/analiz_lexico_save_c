//
// Created by user on 3/8/24.
//
#include <ctype.h>
#include <string.h>
#include <stdlib.h>
#include <stdio.h>
#include "analizador_lexico.h"
#include "tabla_simbolos.h"
#include "sistema_entrada.h" // Asegúrate de incluir el sistema de entrada aquí

void sig_comp_lexico(comp_lexico *lex) {
    static char buffer[1024];
    int buf_len = 0;
    char c;
    int estado = 0; // Estado inicial del autómata.

    memset(buffer, 0, sizeof(buffer)); // Limpiamos el buffer.

    while (1) {
        c = siguiente_caracter(); // Esta función ahora se refiere a la implementada en sistema_entrada.c

        switch (estado) {
            case 0: // Estado inicial, buscando el inicio de un identificador.
                if (isalpha(c)) {
                    buffer[buf_len++] = c;
                    estado = 1; // Cambiamos al estado de recolección de identificador.
                } else if (c == '*') { // Si es *
                    lex->tipo_componente = EOF;
                    return;
                } else if (c == 46) { // Si es .
                    buffer[buf_len++] = c;
                    buffer[buf_len++] = '\0'; // Aseguramos que el string esté terminado correctamente.
                    lex->lexema = strdup(buffer);
                    lex->tipo_componente = PUNTO;
                    estado = 0;
                    return; // Salimos de la función.
                } else if (c == 35){ // Comentario de una línea
                    buffer[buf_len++] = c;
                    estado = 2; //Comentario de una línea
                }else if(c == '\n'){
                    buffer[buf_len++] = c;
                    buffer[buf_len++] = '\0'; // Aseguramos que el string esté terminado correctamente.
                    lex->lexema = strdup(buffer);
                    lex->tipo_componente = LF;
                    estado = 0;
                    return; // Salimos de la función.
                }else if (c == '='){
                    buffer[buf_len++] = c;
                    buffer[buf_len++] = '\0'; // Aseguramos que el string esté terminado correctamente.
                    lex->lexema = strdup(buffer);
                    lex->tipo_componente = LF;
                    estado = 0;
                    return; // Salimos de la función.
                }
                break;
                /*
                else if(c == '"'){ //Comillas
                    printf("\nSe detecta 1 quote");
                    buffer[buf_len++] = c;
                    estado = 3;
                }
                break;
                */

            case 1: // Estado de recolección de identificador.
                if (isalnum(c) || c == '_' || c == '-') {
                    buffer[buf_len++] = c;
                } else {
                    // Final del identificador, devolvemos el último carácter al stream si no es EOF.
                    if (c != EOF) devolver_caracter(c); // Esta función también se refiere a la implementada en sistema_entrada.c

                    buffer[buf_len] = '\0'; // Aseguramos que el string esté terminado correctamente.
                    lex->lexema = strdup(buffer);
                    lex->tipo_componente = buscar_ts(lex->lexema); // Asignar tipo de componente
                    estado = 0;
                    return; // Salimos de la función.
                }
                break;

            case 2:
                if( c == '\n' || c == '\r'){
                    estado = 0;
                }
                break;






        }
    }
}
